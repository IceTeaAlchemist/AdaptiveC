// gaussnewtonv3.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
#include <vector>

#include "GaussNewton3.h"
#include "GaussNewton3_initialize.h"

using namespace std;

template<typename T>
vector<T> slice(vector<T> const& v, int m, int n)
{
    auto first = v.cbegin() + m;
    auto last = v.cbegin() + n + 1;

    vector<T> vec(first, last);
    return vec;
}

int main()
{
    vector<double> x{ 0,0.014,0.037,0.067,0.104,0.142,0.179,0.209,0.247,0.285,0.315,0.352,0.39,0.427,0.457,0.495,0.532,0.547,0.569,0.6,0.637,0.676,0.713,0.742,0.78,0.817,0.854,0.884,0.923,0.96,0.99,1.028,1.05,1.066,1.102,1.14,1.17,1.208,1.246,1.282,1.313,1.358,1.388,1.417,1.455,1.492,1.53,1.559,1.582,1.597,1.634,1.672,1.702,1.74,1.778,1.815,1.845,1.883,1.92,1.957,1.987,2.025,2.062,2.078,2.1,2.13,2.167,2.205,2.243,2.272,2.31,2.347,2.385,2.415,2.452,2.49,2.528,2.558,2.595,2.61,2.632,2.67,2.7,2.737,2.775,2.813,2.842,2.88,2.917,2.955,2.985,3.023,3.06,3.09,3.113,3.135,3.165,3.202,3.24,3.27,3.307,3.346,3.383,3.413,3.45,3.487,3.525,3.555,3.593,3.63,3.646,3.667,3.698,3.735,3.773,3.811,3.84,3.878,3.914,3.96,3.982,4.02,4.058,4.095,4.124,4.147,4.163,4.2,4.238,4.268,4.305,4.343,4.38,4.41,4.447,4.485,4.523,4.552,4.59,4.628,4.643,4.665,4.696,4.732,4.77,4.807,4.837,4.875,4.912,4.957,4.98,5.017,5.055,5.085,5.123,5.16,5.183,5.198,5.235,5.265,5.303,5.34,5.378,5.408,5.445,5.483,5.52,5.551,5.588,5.625,5.655,5.678,5.693,5.73,5.768,5.805,5.835,5.873,5.91,5.948,5.978,6.015,6.053,6.083,6.12,6.158,6.203,6.21,6.233,6.263,6.3,6.345,6.375,6.405,6.443,6.48,6.51,6.548,6.585,6.623,6.653,6.69,6.713,6.728,6.765,6.803,6.833,6.87,6.908,6.938,6.975,7.02,7.05,7.08,7.125,7.155,7.193,7.223,7.245,7.26,7.297,7.335,7.365,7.402,7.44,7.477,7.507,7.545,7.582,7.62,7.65,7.687,7.725,7.739,7.762,7.792,7.829,7.867,7.904,7.934,7.972,8.009,8.047,8.077,8.115,8.152,8.19,8.22,8.257,8.272,8.295,8.34,8.362,8.4,8.437,8.474,8.505,8.542,8.579,8.617,8.647,8.684,8.723,8.759,8.774,8.79,8.827,8.864,8.902,8.932,8.969,9.007,9.045,9.075,9.113,9.15,9.18,9.218,9.262,9.292,9.307,9.33,9.36,9.397,9.435,9.472,9.503,9.54,9.577,9.607,9.646,9.682,9.72,9.75,9.787,9.81,9.825,9.863,9.9,9.93,9.967,10.005,10.035,10.073,10.11,10.148,10.178,10.215,10.253,10.298,10.32,10.343,10.358,10.395,10.433,10.463,10.5,10.538,10.575,10.605,10.643,10.68,10.718,10.748,10.785,10.823,10.838,10.86,10.89,10.927,10.965,11.003,11.033,11.07,11.108,11.145,11.175,11.213,11.25,11.288,11.318,11.34,11.355,11.393,11.43,11.46,11.498,11.535,11.573,11.603,11.64,11.678,11.715,11.745,11.783,11.82,11.858,11.873,11.895,11.925,11.963,12,12.03,12.068,12.105,12.143,12.173,12.21,12.248,12.285,12.323,12.352,12.375,12.39,12.428,12.465,12.496,12.532,12.571,12.6,12.637,12.675,12.713,12.743,12.78,12.818,12.855,12.87,12.893,12.923,12.96,12.998,13.028,13.065,13.102,13.141,13.17,13.207,13.246,13.283,13.313,13.35,13.388,13.41,13.425,13.462,13.493,13.53,13.568,13.597,13.635,13.673,13.71,13.74,13.777,13.815,13.853,13.883,13.905,13.92,13.957,13.997,14.025,14.063,14.101,14.138,14.168,14.205,14.242,14.28,14.311,14.348,14.385,14.4,14.423,14.453,14.49,14.528,14.565,14.595,14.633,14.671,14.708,14.738,14.775,14.813,14.85,14.88,14.918,14.94,14.955,14.993,15.023,15.06,15.098,15.135,15.173,15.203,15.24,15.278,15.307,15.345,15.383,15.42,15.435,15.451,15.488,15.525,15.563,15.593,15.63,15.675,15.705,15.735,15.773,15.811,15.848,15.877,15.915,15.937,15.953,15.99,16.02 };
    vector<double> dx{ 0.72,0.51,0.69,0.75,0.72,0.63,0.78,0.72,0.99,0.72,0.72,0.63,0.99,0.96,1.11,1.05,1.02,0.87,0.9,0.96,0.99,1.08,1.11,1.02,1.05,1.14,1.02,1.08,1.11,1.14,1.17,1.14,1.02,1.26,1.17,1.44,1.23,1.23,0.96,0.99,1.2,1.38,1.17,1.35,1.2,1.41,1.32,1.38,1.02,1.11,1.11,1.17,1.26,1.26,1.2,1.2,1.2,1.17,1.11,1.17,1.14,1.08,1.2,1.17,1.11,1.17,1.32,1.62,1.5,1.35,1.53,1.23,1.59,1.59,1.8,1.65,1.5,1.44,1.41,1.29,1.38,1.26,1.29,1.32,1.41,1.2,1.29,1.29,1.32,1.26,1.29,1.26,1.56,1.53,1.56,1.68,1.89,2.04,1.98,1.92,1.98,1.83,1.83,1.53,1.68,1.62,1.53,1.62,1.41,1.38,1.26,1.56,1.68,1.8,1.65,2.01,1.83,1.86,2.13,1.98,2.01,2.13,2.01,2.01,1.95,1.98,2.04,2.13,2.1,2.1,2.22,2.16,2.04,1.92,2.13,2.19,2.04,2.22,2.16,2.22,2.16,2.19,2.4,2.28,2.46,2.67,2.82,2.7,2.79,2.52,2.79,2.43,2.46,2.46,2.28,2.37,2.25,2.79,2.88,3.12,3.09,3.21,3.15,3,2.91,2.94,2.73,2.85,2.94,3.09,2.97,2.88,3.36,3.36,3.3,3.3,3.51,3.75,3.84,3.93,3.9,3.72,3.66,3.57,3.48,3.57,3.54,3.48,4.23,4.26,4.26,4.26,4.41,4.14,4.11,4.14,4.32,4.2,4.32,4.38,4.41,4.41,4.47,4.95,4.86,4.62,4.8,4.98,4.92,5.04,5.16,5.25,5.07,4.92,4.86,4.86,5.13,5.1,5.01,5.37,5.4,5.55,5.88,6.09,5.46,5.43,5.52,5.94,6.09,5.85,5.94,5.82,5.64,5.67,6.33,6.36,6.21,6.33,6.9,6.51,6.51,6.57,6.51,6.69,6.63,6.6,6.48,6.51,6.57,6.45,7.11,7.14,7.02,7.17,7.65,7.41,7.29,7.38,7.41,7.56,7.5,7.65,7.65,7.2,6.87,7.65,7.65,7.92,8.22,8.4,7.74,7.98,8.43,8.4,8.01,7.98,8.28,8.4,8.49,8.13,7.89,8.61,8.61,8.55,8.7,8.97,8.58,8.58,8.55,8.88,8.73,8.61,8.88,8.55,8.13,7.83,8.67,8.58,8.97,9.39,9.36,8.67,8.61,8.55,8.73,8.55,8.61,8.67,8.7,8.64,8.52,8.25,8.52,8.46,8.55,8.55,8.73,8.37,8.55,8.55,8.49,8.37,7.98,8.46,8.28,7.8,7.5,8.1,8.22,8.31,8.49,8.46,8.01,8.16,7.95,7.59,7.77,8.01,8.13,7.98,7.53,7.5,7.62,7.38,7.41,7.5,7.53,7.71,7.11,7.35,7.38,7.38,7.29,6.84,6.75,7.05,6.87,6.78,7.11,6.63,6.72,6.84,7.26,6.75,6.51,6.42,6.36,6.45,6.27,6.21,6.12,6.03,5.88,5.85,5.76,5.55,5.79,5.85,5.94,5.85,5.43,5.25,5.34,5.19,5.22,4.98,4.74,4.71,5.13,5.25,5.07,4.74,4.8,4.8,4.38,4.35,4.62,4.53,4.32,4.2,3.87,4.14,4.02,3.93,3.96,3.72,3.57,3.63,3.72,3.51,3.24,3.36,3.27,3.42,3.21,3.21,3.21,3.27,3.12,3.15,3,2.85,2.97,3.06,2.61,2.37,2.43,2.46,2.73,2.61,2.37,2.46,2.04,2.07,2.16,2.13,2.31,2.28,2.13,2.34,1.89,2.04,2.07,2.1,2.01,1.89,2.19,1.86,1.74,1.53,1.47,1.38,1.29,1.53,1.5,1.35,1.53,1.47,1.5,1.26,1.38,1.56,1.5,1.38,1.14,1.44,1.74,1.5,1.62,1.29,1.2,1.14,1.17,1.17,1.32,1.08,1.2,1.08,1.05,0.99,1.02,0.99,0.99 };
    GaussNewton3_initialize();
    double beta0[3] = { 9, 10, 4.5 };
    double lb[3] = { 0, 0, 0 };
    double ub[3] = { 40, 40, 15 };
    double coeff[3];
    double iter;
    vector<double> xinterest = slice(x, 0, 29);
    vector<double> dxinterest = slice(dx, 0, 29);
    for (int i = 30; i < x.size(); i++){
        xinterest.push_back(x[i]);
        dxinterest.push_back(dx[i]);
        GaussNewton3(xinterest, dxinterest, beta0, lb, ub, coeff, &iter);
        if (iter < 24) {
            cout << "On point number " << i << ":" << endl;
            cout << coeff[0] << " " << coeff[1] << " " << coeff[2] << endl;
            cout << "Converged in " << iter << " iterations." << endl;
        }
        else {
           // cout << "Did not converge." << endl;
        }
    }
}

// Run program: Ctrl + F5 or Debug > Start Without Debugging menu
// Debug program: F5 or Debug > Start Debugging menu

// Tips for Getting Started: 
//   1. Use the Solution Explorer window to add/manage files
//   2. Use the Team Explorer window to connect to source control
//   3. Use the Output window to see build output and other messages
//   4. Use the Error List window to view errors
//   5. Go to Project > Add New Item to create new code files, or Project > Add Existing Item to add existing code files to the project
//   6. In the future, to open this project again, go to File > Open > Project and select the .sln file
